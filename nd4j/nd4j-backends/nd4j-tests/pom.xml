<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ /* ******************************************************************************
  ~  *
  ~  *
  ~  * This program and the accompanying materials are made available under the
  ~  * terms of the Apache License, Version 2.0 which is available at
  ~  * https://www.apache.org/licenses/LICENSE-2.0.
  ~  *
  ~  *  See the NOTICE file distributed with this work for additional
  ~  *  information regarding copyright ownership.
  ~  * Unless required by applicable law or agreed to in writing, software
  ~  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~  * License for the specific language governing permissions and limitations
  ~  * under the License.
  ~  *
  ~  * SPDX-License-Identifier: Apache-2.0
  ~  ******************************************************************************/
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.nd4j</groupId>
        <artifactId>nd4j-backends</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>nd4j-tests</artifactId>

    <name>nd4j-tests</name>

    <properties>
        <kotlin.version>1.4.30-M1</kotlin.version>
        <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>
        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>
        <junit.version>5.8.0-M1</junit.version>
        <junit-jupiter.version>5.4.2</junit-jupiter.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <java.version>1.8</java.version>
        <maven-shade-plugin.version>3.1.1</maven-shade-plugin.version>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <scala.binary.version>2.11</scala.binary.version>
        <maven.compiler.testTarget>1.8</maven.compiler.testTarget>
        <maven.compiler.testSource>1.8</maven.compiler.testSource>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
                <version>1.18.12.0</version>
                <executions>
                    <execution>
                        <id>delombok</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>delombok</goal>
                        </goals>
                        <configuration>
                            <formatPreferences>
                                <javaLangAsFQN>skip</javaLangAsFQN>
                            </formatPreferences>
                            <verbose>true</verbose>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-delombok</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>testDelombok</goal>
                        </goals>
                        <configuration>
                            <verbose>true</verbose>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals><goal>add-source</goal></goals>
                        <configuration>
                            <sources>
                                <source>src/main/stubs</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>samediff-import-tensorflow</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>samediff-import-onnx</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-native-api</artifactId>
        </dependency>
        <!-- Shaded version of Jackson -->
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>jackson</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>5.0.2.RELEASE</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${reflections.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.google.code.findbugs</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-common-tests</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.stephenc.jcip</groupId>
            <artifactId>jcip-annotations</artifactId>
            <version>1.0-1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>testresources</id>
        </profile>
        <profile>
            <id>nd4j-testresources</id>
        </profile>
        <profile>
            <id>nd4j-tests-cpu</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.nd4j</groupId>
                    <artifactId>nd4j-native</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>
                            <forkCount>${cpu.core.count}</forkCount>
                            <reuseForks>false</reuseForks>
                            <trimStackTrace>false</trimStackTrace>
                            <environmentVariables>
                                <OMP_NUM_THREADS>1</OMP_NUM_THREADS>

                                <LD_LIBRARY_PATH>
                                    ${nd4j.basedir}/nd4j-backends/nd4j-backend-impls/nd4j-native/target/classes
                                </LD_LIBRARY_PATH>
                                <PATH>
                                    ${nd4j.basedir}/nd4j-backends/nd4j-backend-impls/nd4j-native/target/classes
                                </PATH>
                            </environmentVariables>
                            <testSourceDirectory>src/test/java</testSourceDirectory>
                            <includes>
                                <include>*.java</include>
                                <include>**/*.java</include>
                                <include>**/Test*.java</include>
                                <include>**/*Test.java</include>
                                <include>**/*TestCase.java</include>
                            </includes>
                            <junitArtifactName>org.junit.jupiter:junit-jupiter</junitArtifactName>
                            <systemPropertyVariables>
                                <org.nd4j.linalg.defaultbackend>
                                    org.nd4j.linalg.cpu.nativecpu.CpuBackend
                                </org.nd4j.linalg.defaultbackend>
                                <org.nd4j.linalg.tests.backendstorun>
                                    org.nd4j.linalg.cpu.nativecpu.CpuBackend
                                </org.nd4j.linalg.tests.backendstorun>
                            </systemPropertyVariables>
                            <!--
                                Maximum heap size was set to 8g, as a minimum required value for tests run.
                                Depending on a build machine, default value is not always enough.

                                For testing large zoo models, this may not be enough (so comment it out).
                            -->
                            <argLine>-Dfile.encoding=UTF-8 -Xmx${test.heap.size} -Dorg.bytedeco.javacpp.maxphysicalbytes=${test.offheap.size} -Dorg.bytedeco.javacpp.maxbytes=${test.offheap.size}</argLine>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>nd4j-tests-cuda</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <cuda.version>11.0</cuda.version>
                <cudnn.version>8.0</cudnn.version>
                <javacpp-presets.cuda.version>1.5.4</javacpp-presets.cuda.version>
                <junit.jupiter.execution.parallel.enabled>false</junit.jupiter.execution.parallel.enabled>
                <junit.jupiter.execution.parallel.mode.default>same_thread</junit.jupiter.execution.parallel.mode.default>

            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.nd4j</groupId>
                    <artifactId>nd4j-cuda-11.0</artifactId>
                    <version>${project.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.bytedeco</groupId>
                    <artifactId>cuda-platform-redist</artifactId>
                    <version>${cuda.version}-${cudnn.version}-${javacpp-presets.cuda.version}</version>
                </dependency>

            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <dependencies>
                            <dependency>
                                <groupId>org.nd4j</groupId>
                                <artifactId>nd4j-cuda-11.0</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.bytedeco</groupId>
                                <artifactId>cuda-platform</artifactId>
                                <version>11.0-${cudnn.version}-${javacpp-presets.cuda.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>
                            <environmentVariables>
                                <LD_LIBRARY_PATH>
                                    ${nd4j.basedir}/nd4j-backends/nd4j-backend-impls/nd4j-cuda/target/classes
                                </LD_LIBRARY_PATH>
                                <PATH>
                                    ${nd4j.basedir}/nd4j-backends/nd4j-backend-impls/nd4j-cuda/target/classes
                                </PATH>
                                <CUDA_VISIBLE_DEVICES>0</CUDA_VISIBLE_DEVICES>
                            </environmentVariables>
                            <testSourceDirectory>src/test/java</testSourceDirectory>
                            <includes>
                                <include>*.java</include>
                                <include>**/*.java</include>
                                <include>**/Test*.java</include>
                                <include>**/*Test.java</include>
                                <include>**/*TestCase.java</include>
                            </includes>
                            <junitArtifactName>org.junit.jupiter:junit-jupiter</junitArtifactName>
                            <systemPropertyVariables>
                                <org.nd4j.linalg.defaultbackend>
                                    org.nd4j.linalg.jcublas.JCublasBackend
                                </org.nd4j.linalg.defaultbackend>
                                <org.nd4j.linalg.tests.backendstorun>
                                    org.nd4j.linalg.jcublas.JCublasBackend
                                </org.nd4j.linalg.tests.backendstorun>
                            </systemPropertyVariables>
                            <!--
                                Maximum heap size was set to 6g, as a minimum required value for tests run.
                                Depending on a build machine, default value is not always enough.
                            -->
                            <argLine>-Dfile.encoding=UTF-8 -Xmx${test.heap.size} -Dorg.bytedeco.javacpp.maxphysicalbytes=${test.offheap.size} -Dorg.bytedeco.javacpp.maxbytes=${test.offheap.size}</argLine>
                            <parallel>false</parallel>
                            <parallelMavenExecution>false</parallelMavenExecution>
                            <forkCount>0</forkCount>
                            <threadCount>1</threadCount>
                            <perCoreThreadCount>false</perCoreThreadCount>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
